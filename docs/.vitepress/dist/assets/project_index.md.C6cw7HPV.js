import{_ as i,c as a,o as l,ae as n}from"./chunks/framework.Dh1jimFm.js";const g=JSON.parse('{"title":"项目经历","description":"","frontmatter":{},"headers":[],"relativePath":"project/index.md","filePath":"project/index.md","lastUpdated":1743992648000}'),t={name:"project/index.md"};function e(h,s,p,k,r,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="sidebar-false" tabindex="-1">sidebar: false <a class="header-anchor" href="#sidebar-false" aria-label="Permalink to &quot;sidebar: false&quot;">​</a></h2><h1 id="项目经历" tabindex="-1">项目经历 <a class="header-anchor" href="#项目经历" aria-label="Permalink to &quot;项目经历&quot;">​</a></h1><h2 id="ai-会议助手智能体应用-2024-12-2025-03" tabindex="-1">AI 会议助手智能体应用 <em>(2024.12 - 2025.03)</em> <a class="header-anchor" href="#ai-会议助手智能体应用-2024-12-2025-03" aria-label="Permalink to &quot;AI 会议助手智能体应用 *(2024.12 - 2025.03)*&quot;">​</a></h2><p><strong>角色</strong>：团队负责人<br><strong>演示地址</strong>：120.46.27.50</p><h3 id="技术亮点" tabindex="-1">技术亮点 <a class="header-anchor" href="#技术亮点" aria-label="Permalink to &quot;技术亮点&quot;">​</a></h3><ul><li><strong>自然语言处理</strong>：实现语音转录、智能摘要、智能问答全链路功能</li><li><strong>MongoDB 优化</strong>： <ul><li>存储非结构化会议数据（转录文本/会议摘要）</li><li>通过复合索引提升 60% 检索性能</li></ul></li><li><strong>安全架构</strong>：</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // JWT + Spring Security 认证流程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addFilterBefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jwtFilter, UsernamePasswordAuthenticationFilter.class)</span></span></code></pre></div><p>Redis 应用 ：</p><ul><li>热点数据缓存（QPS 3000+）</li><li>分布式会话管理</li></ul><h2 id="拼团交易平台-2024-08-2024-10" tabindex="-1">拼团交易平台 <em>(2024.08 - 2024.10)</em> <a class="header-anchor" href="#拼团交易平台-2024-08-2024-10" aria-label="Permalink to &quot;拼团交易平台 *(2024.08 - 2024.10)*&quot;">​</a></h2><p><strong>角色</strong>：核心开发</p><h3 id="领域设计" tabindex="-1">领域设计 <a class="header-anchor" href="#领域设计" aria-label="Permalink to &quot;领域设计&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[活动域] --&gt; B(规则引擎)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C[人群域] --&gt; D(标签过滤)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E[交易域] --&gt; F(锁单结算)</span></span></code></pre></div><h3 id="核心实现" tabindex="-1">核心实现 <a class="header-anchor" href="#核心实现" aria-label="Permalink to &quot;核心实现&quot;">​</a></h3><ul><li><p><strong>优惠策略系统</strong>：</p><ul><li>规则树模型支持切量分流/标签过滤</li><li>折扣计算节点响应时间 &lt; 50ms</li></ul></li><li><p><strong>动态配置中心</strong>：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RedisConfigListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;promotion:config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义注解</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refreshConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String config) { ... }</span></span></code></pre></div></li><li><p><strong>人群过滤系统</strong>：</p><ul><li>Redis BitMap 存储用户标签</li><li>过滤效率 10w用户/秒</li></ul></li><li><p><strong>交易校验链</strong>：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 责任链模式实现</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addValidator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ActivityValidator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addValidator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UserLimitValidator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div></li></ul><hr><h2 id="tiny-jvm-2023-10-2024-03" tabindex="-1">tiny-JVM <em>(2023.10 - 2024.03)</em> <a class="header-anchor" href="#tiny-jvm-2023-10-2024-03" aria-label="Permalink to &quot;tiny-JVM *(2023.10 - 2024.03)*&quot;">​</a></h2><p><strong>角色</strong>：独立开发</p><h3 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h3><ul><li><p><strong>类加载器</strong>：</p><ul><li>支持常量池/字段/方法元数据解析</li><li>类加载速度 200+ classes/sec</li></ul></li><li><p><strong>字节码解释器</strong>：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">instr</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Instruction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">frame</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StackFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instr.opcode {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iload_0: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(frame.localVars[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>运行时管理</strong>：</p><ul><li>方法区：类元数据存储</li><li>堆：对象实例分配</li><li>栈：方法调用链管理</li></ul></li></ul><hr><h2 id="在线购物商城-2024-08-2024-10" tabindex="-1">在线购物商城 <em>(2024.08 - 2024.10)</em> <a class="header-anchor" href="#在线购物商城-2024-08-2024-10" aria-label="Permalink to &quot;在线购物商城 *(2024.08 - 2024.10)*&quot;">​</a></h2><p><strong>角色</strong>：支付系统负责人</p><h3 id="核心模块" tabindex="-1">核心模块 <a class="header-anchor" href="#核心模块" aria-label="Permalink to &quot;核心模块&quot;">​</a></h3><ul><li><p><strong>支付系统</strong>：</p><ul><li>支付宝沙箱集成（成功率 99.8%）</li><li>支付回调响应 &lt; 500ms</li></ul></li><li><p><strong>数据库设计</strong>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ENUM(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATED&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PAID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;REFUNDED&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    INDEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> idx_user_status (user_id, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>微信集成</strong>：</p><ul><li>扫码登录成功率 98%</li><li>模板消息送达率 99.5%</li></ul></li></ul><hr><h2 id="wut-青云竞赛小程序-2023-09-2024-03" tabindex="-1">WUT 青云竞赛小程序 <em>(2023.09 - 2024.03)</em> <a class="header-anchor" href="#wut-青云竞赛小程序-2023-09-2024-03" aria-label="Permalink to &quot;WUT 青云竞赛小程序 *(2023.09 - 2024.03)*&quot;">​</a></h2><p><strong>角色</strong>：团队负责人</p><h3 id="系统架构" tabindex="-1">系统架构 <a class="header-anchor" href="#系统架构" aria-label="Permalink to &quot;系统架构&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[SpringBoot] --&gt; B[MySQL]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; C[Redis Cluster]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D[小程序] --&gt; A</span></span></code></pre></div><h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h3><ul><li><strong>缓存策略</strong>： <ul><li>热点数据 TTL 5分钟</li><li>缓存命中率 85%</li></ul></li><li><strong>高可用</strong>： <ul><li>Redis Cluster 三节点部署</li><li>故障转移时间 &lt; 10s</li></ul></li></ul><hr><h2 id="简易-rpc-框架-2023-03-2023-07" tabindex="-1">简易 RPC 框架 <em>(2023.03 - 2023.07)</em> <a class="header-anchor" href="#简易-rpc-框架-2023-03-2023-07" aria-label="Permalink to &quot;简易 RPC 框架 *(2023.03 - 2023.07)*&quot;">​</a></h2><p><strong>角色</strong>：架构设计</p><h3 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 动态代理实现</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> serviceInterface) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (T) Proxy.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newProxyInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        serviceInterface.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Class&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;[]{serviceInterface},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteInvoker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(serviceInterface));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="技术实现" tabindex="-1">技术实现 <a class="header-anchor" href="#技术实现" aria-label="Permalink to &quot;技术实现&quot;">​</a></h3><ul><li><p><strong>通信层</strong>：</p><ul><li>Vert.x HTTP 服务器</li><li>支持 5000+ 并发连接</li></ul></li><li><p><strong>序列化</strong>：</p><ul><li>JDK 序列化（默认）</li><li>扩展 SPI 接口</li></ul></li><li><p><strong>服务发现</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">etcdctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> put</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /services/com.example.Service1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.1.1:8080</span></span></code></pre></div></li></ul><p>主要优化点：</p><ol><li>使用 Mermaid 图可视化系统架构</li><li>通过代码块展示关键技术实现</li><li>添加性能指标数据增强说服力</li><li>统一时间线格式 <em>(YYYY.MM - YYYY.MM)</em></li><li>使用副标题突出技术亮点</li><li>添加伪代码帮助理解实现细节</li></ol><p>建议后续可以：</p><ol><li>为每个项目添加「挑战与解决方案」章节</li><li>补充项目成果的量化数据（如性能提升百分比）</li><li>添加技术选型对比分析</li></ol>`,43)]))}const E=i(t,[["render",e]]);export{g as __pageData,E as default};
